#This code was generated by OnshapeGPT, a chatbot trained by Chris Tilton in Spring 2023 as part of a research project under Professor Chris Rogers at Tufts University.
import requests, json
from reqs import os_api_keys, url
from functions import convert_link

# Convert the URL and check if it is valid.
api_urls = convert_link(url)
ps_url = api_urls[0]
if ps_url == "Invalid Link Format":
    print(ps_url)

headers = {
    'Accept': 'application/vnd.onshape.v1+json',
    'Content-Type': 'application/json',
}

# Get all feature IDS
if ps_url != "Invalid Link Format":
    response = requests.get(ps_url + 'features?rollbackBarIndex=-1&includeGeometryIds=true&noSketchGeometry=false', headers=headers, auth=os_api_keys)
    
    if response.ok:
        print("Feature IDs collected successfully.")
    else:
        print(f"Failed to get Feature IDs. Status code: {response.status_code}")
        print(response.text)  # Print the response content for further inspection

    partStudio = response.text
    parsed = json.loads(partStudio)
    feature_dict = {}
    for feature in parsed['features']:
        feature_id = feature['message']['featureId']
        feature_name = feature['message']['name']
        feature_dict[feature_name] = feature_id

    # Assuming the original peg was named "Peg"
    featureName = "Peg" 
    if featureName in feature_dict:
        url_call = ps_url + 'features/featureid/' + feature_dict[featureName]
        response = requests.delete(url_call, headers=headers, auth=os_api_keys)

        # Check if the request was successful
        if response.ok:
            print("Original Peg deleted successfully.")
        else:
            print(f"Failed to delete the original Peg. Status code: {response.status_code}")
            print(response.text)  # Print the response content for further inspection
    else:
        print(f"Could not find a feature named {featureName}. Please check the name and try again.")
    
#This is the end of the Generated Code