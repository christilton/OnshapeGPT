#This code was generated by OnshapeGPT, a chatbot trained by Chris Tilton in Spring 2023 as part of a research project under Professor Chris Rogers at Tufts University.
import requests, json
from reqs import os_api_keys, url
from functions import convert_link

# Convert the Onshape document URL to usable endpoints
api_urls = convert_link(url)
ps_url = api_urls[0]
did_link = api_urls[1]
p_url = api_urls[2]

if ps_url == "Invalid Link Format":
    print(ps_url)
else:
    # Define the header for the request
    headers = {
        'Accept': 'application/vnd.onshape.v1+json',
        'Content-Type': 'application/json',
    }
    
    # Construct the payload for creating a cube
    create_cube = {
      "feature": {
        "type": 134,
        "typeName": "BTMFeature",
          "message": {
            "featureType": "fCuboid", 
            "name": "MyCube",
            "namespace":"d2af92bf969176a0558f5f9c7::vfa91e58a301e3c528465aa9e::ef139159bebea87592e54aa0b::m6564dbd037df9a05421d9a73",
            "parameters": [
              {
                 "type": 147,
                 "typeName": "BTMParameterQuantity",
                 "message": {
                   "expression": "vector(0,0,0)*in",  # Bottom left front corner
                   "parameterId": "corner1"
               }
             },
             {
                 "type": 147,
                 "typeName": "BTMParameterQuantity",
                 "message": {
                   "expression": "vector(1,1,1)*in",  # Top right back corner
                   "parameterId": "corner2"}
               }
            ]
          }
        }
    }
    
    # Create Cube in Onshape
    response = requests.post(ps_url+'features', headers=headers, auth=os_api_keys, json=create_cube)

    # Check if the request was successful
    if response.ok:
        print("Cube created successfully.")
    else:
        print(f"Failed to create cube. Status code: {response.status_code}")
        print(response.text)  # Print the response content for further inspection

#This is the end of the Generated Code