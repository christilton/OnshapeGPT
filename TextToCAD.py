#This code was generated by OnshapeGPT, a chatbot trained by Chris Tilton in Spring 2023 as part of a research project under Professor Chris Rogers at Tufts University.
import requests
from reqs import os_api_keys, url

def convert_link(old_link):
    old_link = old_link.replace("https://", "")
    parts = old_link.split("/")
    doc_id = parts[2]
    workspace_id = parts[4]
    element_id = parts[6]
    ps_link = f"https://cad.onshape.com/api/partstudios/d/{doc_id}/w/{workspace_id}/e/{element_id}/"
    did_link = f"https://cad.onshape.com/api/documents/d/{doc_id}/"
    return ps_link, did_link

api_urls = convert_link(url)
ps_url = api_urls[0]
did_link = api_urls[1]

if ps_url == "Invalid Link Format":
    print(ps_url)

headers = {
    'Accept': 'application/vnd.onshape.v1+json',
    'Content-Type': 'application/json',
}

# Adjustments to the solar panel geometry to make them cuboids
solar_panel_geometry_left = {
    "feature" : {
        "type": 134,
        "typeName": "BTMFeature",
        "message": {
            "featureType": "fCuboid",
            "name": "SolarPanelLeft",
            "namespace":"d2af92bf969176a0558f5f9c7::vfa91e58a301e3c528465aa9e::ef139159bebea87592e54aa0b::m6564dbd037df9a05421d9a73",
            "parameters": [
                {
                    "type": 147,
                    "typeName": "BTMParameterQuantity",
                    "message": {
                        "expression": "vector(17, -1.5, 1.5)*in",  # Positioning the bottom left corner of the left panel
                        "parameterId": "corner1"}
                },
                {
                    "type": 147,
                    "typeName": "BTMParameterQuantity",
                    "message": {
                        "expression": "vector(17.5, -3, 1.8)*in",  # Positioning the top right corner of the left panel
                        "parameterId": "corner2"}
                }
            ]
        }
    }
}

solar_panel_geometry_right = {
    "feature" : {
        "type": 134,
        "typeName": "BTMFeature",
        "message": {
            "featureType": "fCuboid",
            "name": "SolarPanelRight",
            "namespace":"d2af92bf969176a0558f5f9c7::vfa91e58a301e3c528465aa9e::ef139159bebea87592e54aa0b::m6564dbd037df9a05421d9a73",
            "parameters": [
                {
                    "type": 147,
                    "typeName": "BTMParameterQuantity",
                    "message": {
                        "expression": "vector(17, 0.5, 1.5)*in",  # Positioning the bottom left corner of the right panel
                        "parameterId": "corner1"}
                },
                {
                    "type": 147,
                    "typeName": "BTMParameterQuantity",
                    "message": {
                        "expression": "vector(17.5, 3, 1.8)*in",  # Positioning the top right corner of the right panel
                        "parameterId": "corner2"}
                }
            ]
        }
    }
}

# Creating the adjusted solar panels
for geometry in [solar_panel_geometry_left, solar_panel_geometry_right]:
    response = requests.post(ps_url+'features', headers=headers, auth=os_api_keys, json=geometry)
    
    if response.ok:
        print(f"{geometry['feature']['message']['name']} created successfully.")
    else:
        print(f"Failed to create {geometry['feature']['message']['name']}. Status code: {response.status_code}")
        print(response.text)

#This is the end of the Generated Code